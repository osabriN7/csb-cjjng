{"version":3,"sources":["Tree.js","Kick.js","Animation2.js","Sphere.js","Uh60helico.js","Matrix.js","Tabs.js","ToolBar.js","components/FontawsomeIcons/index.js","DiagramApp.js","index.js"],"names":["Tree","data","className","map","tree","node","TreeNode","useState","childVisible","setChildVisiblity","hasChild","children","onClick","e","v","icon","name","useGLTF","preload","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","NestedGrid","matrix","classes","FormRow","Fragment","d","Grid","item","xs","Paper","container","Tabs","diagram","toggleState","setToggleState","toggleTab","index","style","width","class","for","height","nodes","state","captions","onNodeSelected","sender","args","onSelectedLinkChanged","arrowHeadShapes","arrowHeadNames","onSelectedPortAdded","arrowInOuts","arrowInOutName","id","props","menuButton","marginRight","title","formControl","margin","minWidth","selectEmpty","marginTop","ToolBar","React","link","setLink","AppBar","position","Toolbar","marginLeft","backgroundColor","Button","right","opacity","type","onChange","files","target","reader","FileReader","readAsText","onload","file","result","JSON","parse","functions","containers","drawTree","i","links","length","idOrigin","origin","idTarget","find","c","mf","Diagramming","DiagramLink","getAnchorPattern","console","log","setOriginAnchor","setShape","LinkShape","Cascading","setHeadBrush","setHeadShape","setHeadShapeSize","addItem","arrangeDiagram","setState","treeData","getDiagramJson","getAllFunNames","n","onChangeModel","FormControl","InputLabel","Select","labelId","value","event","setLinkShape","setRouteLinks","MenuItem","FormHelperText","zoom","getZoomFactor","setZoomFactor","selectedItems","getSelection","listChilds","getChildren","getVisible","forEach","getAllLinks","setVisible","undo","redo","unshift","arr","k","fct","onChangeMatrix","library","add","faExpandAlt","faCaretDown","faArrowLeft","faArrowRight","faLongArrowAltLeft","faLongArrowAltRight","faProjectDiagram","faUnlock","faSearchPlus","faSearchMinus","faUser","faUpload","faEnvelope","faLock","faEye","faEyeSlash","faArrowUp","faArrowDown","faExpand","faCompress","faBolt","faSpinner","faSort","faSortUp","faSortDown","faMoon","faChevronRight","faGlobe","faCaretRight","DiagramApp","getAllChildren","child","findRec","slice","filterRec","filter","exist","x","y","points","goodForma","addTocontainer","resizeToFitChildren","arrange","Graphs","LayeredLayout","drawFct","getFactory","createContainerNode","cm","Drawing","Rect","setText","setId","nextId","ports","listPorts","p","AnchorPoint","setMarkStyle","MarkStyle","Rectangle","setColor","push","pattern","AnchorPattern","setAnchorPattern","obj","findInChild","filterJson","fcts","fctsFiltred","f","globalFunNames","flat","concat","allItems","items","getFctJson","Diagram","setShowGrid","setDefaultShape","Spline","setTheme","Theme","getBusiness","backBrush","behavior","Behavior","LinkContainers","AeroEffect","GlassEffect","GlassEffectType","glassEffect","setType","Type2","getNodeEffects","firstNode","getNodes","shapeNodes","shapeIds","arrowHeadIds","arrowHeadNodes","ContainerNode","ShapeNode","arrowHeadId","arrowHead","arrowInOut1","arrowInOut2","arrowInOut3","setAllowInplaceEdit","setUndoEnabled","addEventListener","onAddContainer","bind","onContainerChildAdded","onNodeTextEdited","onNodeDeleted","getNode","this","toString","nbligne","getId","j","removeItem","getText","selectedShape","getShape","setLinkHeadShape","layout","SpringLayout","iteration","resizeToFitItems","val","selectedNode","set","Math","floor","random","setSize","setAllowIncoming","setAllowOutgoing","getPoints","setPoints","ids","othersIds","getMaxId","allIds","max","nodeView","Component","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dce4ae2c.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Tree = ({ data = [] }) => {\n  return (\n    <div className=\"d-tree\">\n      <ul className=\"d-flex d-tree-container flex-column\">\n        {data.map((tree) => (\n          <TreeNode node={tree} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst TreeNode = ({ node }) => {\n  const [childVisible, setChildVisiblity] = useState(false);\n\n  const hasChild = node.children ? true : false;\n\n  return (\n    <li className=\"d-tree-node border-0\">\n      <div className=\"d-flex\" onClick={(e) => setChildVisiblity((v) => !v)}>\n        {hasChild && (\n          <div\n            className={`d-inline d-tree-toggler ${\n              childVisible ? \"active\" : \"\"\n            }`}\n          >\n            <FontAwesomeIcon icon=\"caret-right\" />\n          </div>\n        )}\n\n        <div className=\"col pl2 d-tree-head\">\n          <i className=\"\">\n            <FontAwesomeIcon icon=\"project-diagram\" />{\" \"}\n          </i>\n\n          {node.name}\n        </div>\n      </div>\n\n      {hasChild && childVisible && (\n        <div className=\"d-tree-content\">\n          <ul className=\"d-flex d-tree-container flex-column\">\n            <Tree data={node.children} />\n          </ul>\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default Tree;\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect} from \"react\";\nimport { useGLTF } from \"@react-three/drei/useGLTF\";\n\nimport { useAnimations } from \"@react-three/drei/useAnimations\";\n\nexport default function Model(props) {\n  const group = useRef();\n  const { nodes, materials, animations } = useGLTF(\"/kick.glb\");\n  const { actions } = useAnimations(animations, group);\n  useEffect(() => {\n    console.log(actions);\n    actions.Armada.play();\n  });\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[Math.PI / 2, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n        <primitive object={nodes.mixamorigHips} />\n        <skinnedMesh\n          material={materials.Ch03_Body}\n          geometry={nodes.Ch03.geometry}\n          skeleton={nodes.Ch03.skeleton}\n        />\n      </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/kick.glb\");\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\n\nexport default function Model(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/file-1614790270747.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh\n        geometry={nodes.mesh_6.geometry}\n        material={nodes.mesh_6.material}\n        position={[0, 0.01, 0]}\n        rotation={[-Math.PI / 2, 0, 0]}\n        scale={[39.37, 39.37, 39.37]}\n      />\n      <group position={[0, 0.01, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[39.37, 39.37, 39.37]}>\n        <mesh geometry={nodes.mesh_7.geometry} material={nodes.mesh_7.material} />\n        <mesh geometry={nodes.mesh_7_1.geometry} material={nodes.mesh_7_1.material} />\n        <mesh geometry={nodes.mesh_7_2.geometry} material={nodes.mesh_7_2.material} />\n      </group>\n      <mesh\n        geometry={nodes.mesh_8.geometry}\n        material={nodes.mesh_8.material}\n        position={[0, 0.01, 0]}\n        rotation={[-Math.PI / 2, 0, 0]}\n        scale={[39.37, 39.37, 39.37]}\n      />\n      <mesh\n        geometry={nodes.mesh_9.geometry}\n        material={nodes.mesh_9.material}\n        position={[0, 0.01, 0]}\n        rotation={[-Math.PI / 2, 0, 0]}\n        scale={[39.37, 39.37, 39.37]}\n      />\n      <group position={[0, 0.01, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[39.37, 39.37, 39.37]}>\n        <mesh geometry={nodes.mesh_10.geometry} material={nodes.mesh_10.material} />\n        <mesh geometry={nodes.mesh_10_1.geometry} material={nodes.mesh_10_1.material} />\n        <mesh geometry={nodes.mesh_10_2.geometry} material={nodes.mesh_10_2.material} />\n      </group>\n      <mesh\n        geometry={nodes.mesh_11.geometry}\n        material={nodes.mesh_11.material}\n        position={[0, 0.01, 0]}\n        rotation={[-Math.PI / 2, 0, 0]}\n        scale={[39.37, 39.37, 39.37]}\n      />\n      <group position={[0, 0.01, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[39.37, 39.37, 39.37]}>\n        <mesh geometry={nodes.mesh_0.geometry} material={nodes.mesh_0.material} />\n        <mesh geometry={nodes.mesh_0_1.geometry} material={nodes.mesh_0_1.material} />\n        <mesh geometry={nodes.mesh_0_2.geometry} material={nodes.mesh_0_2.material} />\n        <mesh geometry={nodes.mesh_0_3.geometry} material={nodes.mesh_0_3.material} />\n      </group>\n      <group position={[0, 0.01, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[39.37, 39.37, 39.37]}>\n        <mesh geometry={nodes.mesh_1.geometry} material={nodes.mesh_1.material} />\n        <mesh geometry={nodes.mesh_1_1.geometry} material={nodes.mesh_1_1.material} />\n      </group>\n      <group position={[0, 0.01, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[39.37, 39.37, 39.37]}>\n        <mesh geometry={nodes.mesh_2.geometry} material={nodes.mesh_2.material} />\n        <mesh geometry={nodes.mesh_2_1.geometry} material={nodes.mesh_2_1.material} />\n        <mesh geometry={nodes.mesh_2_2.geometry} material={nodes.mesh_2_2.material} />\n      </group>\n      <group position={[0, 0.01, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[39.37, 39.37, 39.37]}>\n        <mesh geometry={nodes.mesh_3.geometry} material={nodes.mesh_3.material} />\n        <mesh geometry={nodes.mesh_3_1.geometry} material={nodes.mesh_3_1.material} />\n        <mesh geometry={nodes.mesh_3_2.geometry} material={nodes.mesh_3_2.material} />\n      </group>\n      <group position={[0, 0.01, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[39.37, 39.37, 39.37]}>\n        <mesh geometry={nodes.mesh_4.geometry} material={nodes.mesh_4.material} />\n        <mesh geometry={nodes.mesh_4_1.geometry} material={nodes.mesh_4_1.material} />\n        <mesh geometry={nodes.mesh_4_2.geometry} material={nodes.mesh_4_2.material} />\n      </group>\n      <group position={[0, 0.01, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[39.37, 39.37, 39.37]}>\n        <mesh geometry={nodes.mesh_5.geometry} material={nodes.mesh_5.material} />\n        <mesh geometry={nodes.mesh_5_1.geometry} material={nodes.mesh_5_1.material} />\n        <mesh geometry={nodes.mesh_5_2.geometry} material={nodes.mesh_5_2.material} />\n      </group>\n      <group position={[0, 0.01, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[39.37, 39.37, 39.37]}>\n        <mesh geometry={nodes.mesh_12.geometry} material={nodes.mesh_12.material} />\n        <mesh geometry={nodes.mesh_12_1.geometry} material={nodes.mesh_12_1.material} />\n        <mesh geometry={nodes.mesh_12_2.geometry} material={nodes.mesh_12_2.material} />\n        <mesh geometry={nodes.mesh_12_3.geometry} material={nodes.mesh_12_3.material} />\n      </group>\n      <group position={[0, 0.01, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[39.37, 39.37, 39.37]}>\n        <mesh geometry={nodes.mesh_13.geometry} material={nodes.mesh_13.material} />\n        <mesh geometry={nodes.mesh_13_1.geometry} material={materials.gold} />\n        <mesh geometry={nodes.mesh_13_2.geometry} material={nodes.mesh_13_2.material} />\n        <mesh geometry={nodes.mesh_13_3.geometry} material={nodes.mesh_13_3.material} />\n      </group>\n      <group position={[0, 0.01, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[39.37, 39.37, 39.37]}>\n        <mesh geometry={nodes.mesh_14.geometry} material={materials.foil_silver} />\n        <mesh geometry={nodes.mesh_14_1.geometry} material={nodes.mesh_14_1.material} />\n        <mesh geometry={nodes.mesh_14_2.geometry} material={nodes.mesh_14_2.material} />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload('/file-1614790270747.glb')\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { useGLTF } from \"@react-three/drei/useGLTF\";\n\nimport { useAnimations } from \"@react-three/drei/useAnimations\";\n\nexport default function Model(props) {\n  const [leftRight, setLeftRight] = useState(false);\n  const group = useRef();\n  const { nodes, materials, animations } = useGLTF(\"/animated-sphere.glb\");\n  const { actions } = useAnimations(animations, group);\n  console.log(actions);\n  useEffect(() => {\n    if (leftRight) {\n      actions.LeftRight.play();\n      actions.UpDown.stop();\n    } else {\n      actions.UpDown.play();\n      actions.LeftRight.stop();\n    }\n  });\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <mesh\n        onClick={() => setLeftRight(!leftRight)}\n        name=\"Sphere\"\n        material={materials[\"Red Shiny\"]}\n        geometry={nodes.Sphere.geometry}\n      />\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/animated-sphere.glb\");\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef, useEffect } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport { useGLTF } from \"@react-three/drei\";\n\nexport default function Model(props) {\n  const group = useRef();\n  const { nodes, materials } = useGLTF(\"/uh60helico.glb\");\n  useFrame(() => {\n    group.current.rotation.y += 0.01;\n  });\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]}>\n        <mesh\n          geometry={nodes.Mesh_0.geometry}\n          material={nodes.Mesh_0.material}\n        />\n        <mesh\n          geometry={nodes.Mesh_1.geometry}\n          material={materials.Material__36}\n        />\n        <mesh\n          geometry={nodes.Mesh_2.geometry}\n          material={materials.Material__37}\n        />\n        <mesh\n          geometry={nodes.Mesh_3.geometry}\n          material={nodes.Mesh_3.material}\n        />\n        <mesh\n          geometry={nodes.Mesh_4.geometry}\n          material={nodes.Mesh_4.material}\n        />\n        <mesh\n          geometry={nodes.Mesh_5.geometry}\n          material={nodes.Mesh_5.material}\n        />\n        <mesh\n          geometry={nodes.Mesh_6.geometry}\n          material={materials.Material__28}\n        />\n        <mesh\n          geometry={nodes.Mesh_7.geometry}\n          material={materials.Material__30}\n        />\n        <mesh\n          geometry={nodes.Mesh_8.geometry}\n          material={materials.Material__33}\n        />\n        <mesh\n          geometry={nodes.Mesh_9.geometry}\n          material={materials.Material__34}\n        />\n        <mesh\n          geometry={nodes.Mesh_10.geometry}\n          material={nodes.Mesh_10.material}\n        />\n        <mesh\n          geometry={nodes.Mesh_26.geometry}\n          material={nodes.Mesh_26.material}\n        />\n        <mesh\n          geometry={nodes.Mesh_27.geometry}\n          material={nodes.Mesh_27.material}\n        />\n        <mesh\n          geometry={nodes.Mesh_28.geometry}\n          material={nodes.Mesh_28.material}\n        />\n        <mesh\n          geometry={nodes.Mesh_29.geometry}\n          material={nodes.Mesh_29.material}\n        />\n        <mesh\n          geometry={nodes.Mesh_30.geometry}\n          material={nodes.Mesh_30.material}\n        />\n        <mesh\n          geometry={nodes.Mesh_31.geometry}\n          material={nodes.Mesh_31.material}\n        />\n        <mesh\n          geometry={nodes.Mesh_32.geometry}\n          material={nodes.Mesh_32.material}\n        />\n        <mesh\n          geometry={nodes.Mesh_33.geometry}\n          material={nodes.Mesh_33.material}\n        />\n        <group position={[-1.14, 3.76, -0.04]} rotation={[0, 0, -Math.PI / 2]}>\n          <group position={[3.76, 1.14, 0.04]} rotation={[0, 0, Math.PI / 2]}>\n            <mesh\n              geometry={nodes.Mesh_11.geometry}\n              material={nodes.Mesh_11.material}\n            />\n            <mesh\n              geometry={nodes.Mesh_12.geometry}\n              material={nodes.Mesh_12.material}\n            />\n          </group>\n        </group>\n        <group position={[1.17, 3.76, -0.04]} rotation={[0, 0, -Math.PI / 2]}>\n          <group position={[3.76, -1.17, 0.04]} rotation={[0, 0, Math.PI / 2]}>\n            <mesh\n              geometry={nodes.Mesh_13.geometry}\n              material={nodes.Mesh_13.material}\n            />\n            <mesh\n              geometry={nodes.Mesh_14.geometry}\n              material={nodes.Mesh_14.material}\n            />\n          </group>\n        </group>\n        <group position={[-1.15, 0.05, 0.04]} rotation={[0, 0, -Math.PI / 2]}>\n          <group position={[0.05, 1.15, -0.04]} rotation={[0, 0, Math.PI / 2]}>\n            <mesh\n              geometry={nodes.Mesh_17.geometry}\n              material={nodes.Mesh_17.material}\n            />\n            <mesh\n              geometry={nodes.Mesh_18.geometry}\n              material={nodes.Mesh_18.material}\n            />\n          </group>\n        </group>\n        <group position={[1.18, 0.05, 0.04]} rotation={[0, 0, -Math.PI / 2]}>\n          <group position={[0.05, -1.18, -0.04]} rotation={[0, 0, Math.PI / 2]}>\n            <mesh\n              geometry={nodes.Mesh_15.geometry}\n              material={nodes.Mesh_15.material}\n            />\n            <mesh\n              geometry={nodes.Mesh_16.geometry}\n              material={nodes.Mesh_16.material}\n            />\n          </group>\n        </group>\n        <group\n          position={[0.01, -9.23, 0.18]}\n          rotation={[-1.79, 0, 0]}\n          scale={[0.08, 0.07, 0.07]}\n        >\n          <group\n            position={[-0.17, -27.39, 138.2]}\n            rotation={[1.79, 0, 0]}\n            scale={[13.33, 15.26, 15.26]}\n          >\n            <mesh\n              geometry={nodes.Mesh_19.geometry}\n              material={nodes.Mesh_19.material}\n            />\n          </group>\n        </group>\n        <group position={[0.03, -0.05, 1.76]} rotation={[-Math.PI / 2, 0, 0]}>\n          <group position={[-0.03, 1.76, 0.05]} rotation={[Math.PI / 2, 0, 0]}>\n            <mesh\n              geometry={nodes.Mesh_20.geometry}\n              material={nodes.Mesh_20.material}\n            />\n            <mesh\n              geometry={nodes.Mesh_21.geometry}\n              material={nodes.Mesh_21.material}\n            />\n          </group>\n        </group>\n        <group\n          position={[0.1, -10.42, 2.29]}\n          rotation={[0, -0.12, -Math.PI / 2]}\n        >\n          <group\n            position={[-10.42, -0.38, -2.26]}\n            rotation={[-0.12, 0, Math.PI / 2]}\n          >\n            <mesh\n              geometry={nodes.Mesh_22.geometry}\n              material={nodes.Mesh_22.material}\n            />\n          </group>\n        </group>\n        <group position={[0.02, -7.9, -1.3]} rotation={[1.58, 0, 0]}>\n          <group position={[-0.02, 1.24, -7.91]} rotation={[-1.58, 0, 0]}>\n            <mesh\n              geometry={nodes.Mesh_24.geometry}\n              material={nodes.Mesh_24.material}\n            />\n          </group>\n        </group>\n        <group position={[-1.48, 1.17, -1.25]} rotation={[Math.PI / 2, 0, 0]}>\n          <group position={[1.48, 1.25, 1.17]} rotation={[-Math.PI / 2, 0, 0]}>\n            <mesh\n              geometry={nodes.Mesh_25.geometry}\n              material={nodes.Mesh_25.material}\n            />\n          </group>\n        </group>\n        <group position={[1.52, 1.17, -1.25]} rotation={[Math.PI / 2, 0, 0]}>\n          <group position={[-1.52, 1.25, 1.17]} rotation={[-Math.PI / 2, 0, 0]}>\n            <mesh\n              geometry={nodes.Mesh_23.geometry}\n              material={nodes.Mesh_23.material}\n            />\n          </group>\n        </group>\n      </group>\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/uh60helico.glb\");\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function NestedGrid({ matrix = [] }) {\n  const classes = useStyles();\n\n  function FormRow({ data = [] }) {\n    return (\n      <React.Fragment>\n        {data.map((d) => (\n          <Grid item xs={3}>\n            <Paper className={classes.paper}>{d}</Paper>\n          </Grid>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        {matrix.map((d) => (\n          <Grid container item xs={12}>\n            <FormRow data={d} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport React from \"react\";\nimport Tree from \"./Tree\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { DiagramView, NodeListView } from \"diagram-library-react\";\nimport Matrix from \"./Matrix\";\nimport \"./App.css\";\nimport \"./Tabs.css\";\nfunction Tabs({ diagram }) {\n  const [toggleState, setToggleState] = useState(1);\n\n  const toggleTab = (index) => {\n    setToggleState(index);\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"bloc-tabs\">\n        <button\n          style={{ width: \"200px\" }}\n          className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\n          onClick={() => toggleTab(1)}\n        >\n          Diagram\n        </button>\n        <button\n          style={{ width: \"200px\" }}\n          className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\n          onClick={() => toggleTab(2)}\n        >\n          MatrixView\n        </button>\n      </div>\n\n      <div className=\"container-fluid content-tabs\">\n        <div\n          className={toggleState === 1 ? \"content active-content\" : \"content\"}\n        >\n          <div class=\"wrapper\">\n            <div class=\"palette\">\n              <div>\n                <label\n                  class=\"text-center p-1 mb-2\"\n                  style={{\n                    width: \"100%\"\n                  }}\n                  for=\"Nodes\"\n                >\n                  <FontAwesomeIcon icon=\"caret-down\" /> Nodes\n                </label>\n              </div>\n              <div\n                class=\"border border-dark marging-left-5\"\n                style={{ width: \"190px\" }}\n              >\n                <NodeListView\n                  style={{ height: \"80px\", width: \"185px\" }}\n                  nodes={diagram.state.nodes}\n                  captions={diagram.state.captions}\n                ></NodeListView>\n              </div>\n              <div>\n                <label\n                  class=\"text-center p-1 mb-2\"\n                  style={{\n                    width: \"100%\"\n                    //backgroundColor: \"#87CEEB\"\n                  }}\n                  for=\"Nodes\"\n                >\n                  <FontAwesomeIcon icon=\"caret-down\" /> ArrowShapes\n                </label>\n              </div>\n              <div\n                style={{ width: \"190px\" }}\n                class=\"border border-dark marging-left-5\"\n              >\n                <NodeListView\n                  onNodeSelected={(sender, args) =>\n                    diagram.onSelectedLinkChanged(sender, args)\n                  }\n                  style={{ height: \"80px\", width: \"185px\" }}\n                  nodes={diagram.state.arrowHeadShapes}\n                  captions={diagram.state.arrowHeadNames}\n                ></NodeListView>\n              </div>\n              <label\n                class=\"text-center p-1 mb-2\"\n                style={{\n                  width: \"100%\"\n                  //  backgroundColor: \"#87CEEB\"\n                }}\n                for=\"Nodes\"\n              >\n                <FontAwesomeIcon icon=\"caret-down\" /> AddPort\n              </label>\n              <div\n                class=\"border border-dark marging-left-5\"\n                style={{ width: \"190px\" }}\n              >\n                <NodeListView\n                  onNodeSelected={(sender, args) =>\n                    diagram.onSelectedPortAdded(sender, args)\n                  }\n                  style={{ height: \"80px\", width: \"185px\" }}\n                  nodes={diagram.state.arrowInOuts}\n                  captions={diagram.state.arrowInOutName}\n                ></NodeListView>\n              </div>\n            </div>\n            <div id=\"diagram\" class=\"diaram\">\n              <DiagramView\n                diagram={diagram.state.diagram}\n                {...diagram.state.props}\n                style={{ height: \"600px \" }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div\n          className={toggleState === 2 ? \"content  active-content\" : \"content\"}\n        >\n          <Matrix matrix={diagram.state.matrix} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Tabs;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport mf from \"diagram-library\";\nimport Select from \"@material-ui/core/Select\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport \"./toolBar.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function ToolBar({ diagram }) {\n  const classes = useStyles();\n  const [link, setLink] = React.useState(\"\");\n\n  const onSelectedLinkTypeChanged = (event) => {\n    setLink(event.target.value);\n    diagram.state.diagram.setLinkShape(event.target.value);\n\n    if (event.target.value === 2) diagram.state.diagram.setRouteLinks(true);\n    else diagram.state.diagram.setRouteLinks(false);\n  };\n\n  const onUndo = () => {\n    diagram.state.diagram.undo();\n\n    diagram.setState({ treeData: diagram.getDiagramJson() });\n  };\n\n  const onRedo = () => {\n    diagram.state.diagram.redo();\n    diagram.setState({ treeData: diagram.getDiagramJson() });\n  };\n\n  const onZoomOutClicked = (e) => {\n    var zoom = diagram.state.diagram.getZoomFactor();\n\n    zoom -= 10;\n    if (zoom > 10) diagram.state.diagram.setZoomFactor(zoom);\n  };\n\n  const onZoomInClicked = (e) => {\n    var zoom = diagram.state.diagram.getZoomFactor();\n\n    zoom += 10;\n    if (zoom < 500) diagram.state.diagram.setZoomFactor(zoom);\n  };\n\n  const onLockClicked = (event) => {\n    var mydiagram = diagram.state.diagram;\n    var selectedItems = mydiagram.getSelection().nodes;\n    var listChilds = [];\n    var listLinks = [];\n    if (selectedItems.length > 0) {\n      var selectedNode = selectedItems[0];\n\n      /*  if (\n        selectedNode.getEnabledHandles() !==\n        mf.Diagramming.AdjustmentHandles.None\n      )\n        selectedNode.setEnabledHandles(mf.Diagramming.AdjustmentHandles.None);\n      else selectedNode.setEnabledHandles(mf.Diagramming.AdjustmentHandles.All);\n    }*/\n      listChilds = selectedNode.getChildren();\n\n      if (listChilds.length > 0 && listChilds[0].getVisible()) {\n        listChilds.forEach((item) => {\n          var links = item.getAllLinks();\n          links.forEach((link) => {\n            link.setVisible(false);\n          });\n          item.setVisible(false);\n        });\n      } else if (listChilds.length > 0) {\n        listChilds.forEach((item) => {\n          var links = item.getAllLinks();\n          links.forEach((link) => {\n            link.setVisible(true);\n          });\n          item.setVisible(true);\n        });\n      } else {\n        return;\n      }\n    }\n  };\n\n  const onChangeModel = (e) => {\n    let files = e.target.files;\n    let reader = new FileReader();\n    reader.readAsText(files[0]);\n    reader.onload = (e) => {\n      const file = e.target.result;\n      const data = JSON.parse(file);\n\n      const functions = data.functions;\n      var alreadyDrawnChild = [];\n      var containers = [];\n\n      //diagram.setState({ treeData: functions });\n      diagram.drawTree(functions, null);\n\n      containers = diagram.state.containers;\n\n      //customize the first node\n      /*const firstNode = containers.find((c) => c.id === 1);\n      firstNode.container.setBrush({\n        type: \"SolidBrush\",\n        color: \"rgb(255, 212, 50)\"\n      });*/\n\n      //draw links\n      for (var i = 0; i < data.links.length; i++) {\n        var idOrigin = data.links[i].origin;\n        var idTarget = data.links[i].target;\n\n        // create a link\n        var origin = containers.find((c) => c.name === idOrigin);\n        var target = containers.find((c) => c.name === idTarget);\n        var link = new mf.Diagramming.DiagramLink(\n          diagram.state.diagram,\n          origin.container,\n          target.container\n        );\n        var pattern = origin.container.getAnchorPattern();\n        console.log(link.setOriginAnchor(4));\n\n        link.setShape(mf.Diagramming.LinkShape.Cascading);\n        link.setHeadBrush(\"blue\");\n\n        // var linkStyle = new mf.Diagramming.Style();\n        // linkStyle.setBrush({type:'SolidBrush', color:'rgb(255, 0, 5)'});\n        // linkStyle.setStroke(\"#959595\");\n        // this.state.diagram.getTheme().styles['std:DiagramLink'] = linkStyle;\n\n        link.setHeadShape(\"Triangle\");\n        link.setHeadShapeSize(3);\n        diagram.state.diagram.addItem(link);\n      }\n\n      //Styling\n      diagram.arrangeDiagram(diagram.state.diagram);\n      diagram.setState({ treeData: diagram.getDiagramJson() });\n\n      //style links\n\n      // var linkStyle = new mf.Diagramming.Style();\n      // linkStyle.setBrush({type:'SolidBrush', color: 'rgb(255, 0, 5)'});\n      // linkStyle.setStroke('#959595');\n      // this.state.diagram.getTheme().styles['std:DiagramLink'] = linkStyle;\n      var functionsName = diagram.getAllFunNames(functions);\n      var matrix = functionsName.map((n) => [n]);\n\n      console.log(matrix);\n\n      diagram.setState({ matrix: matrix });\n    };\n  };\n\n  const onChangeMatrix = (e) => {\n    let files = e.target.files;\n    let reader = new FileReader();\n    reader.readAsText(files[0]);\n    reader.onload = (e) => {\n      const file = e.target.result;\n      const data = JSON.parse(file);\n      data.unshift([<FontAwesomeIcon icon=\"project-diagram\" />]);\n      var matrix = diagram.state.matrix;\n      matrix.unshift(data);\n\n      for (var i = 1; i < matrix.length; i++) {\n        var arr = [];\n        for (var k = 0; k < data.length; k++) {\n          if (k === 0) {\n            arr[k] = matrix[i][0];\n          } else {\n            arr[k] = (\n              <button\n                style={{ width: \"20px\", height: \"20px\" }}\n                id={i + \",\" + k}\n                type=\"button\"\n                onClick={diagram.fct}\n              ></button>\n            );\n          }\n        }\n        matrix[i] = arr;\n      }\n      diagram.setState({ matrix: matrix });\n    };\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar\n          style={{\n            marginLeft: \"-12px\",\n            marginRight: \"-12px\",\n            backgroundColor: \"#808080\"\n          }}\n        >\n          <div>\n            <Button color=\"inherit\">\n              <FontAwesomeIcon icon=\"upload\" />\n              <input\n                style={{\n                  position: \"relative\",\n                  right: \"20px\",\n                  opacity: \"0\",\n                  width: \"50px\"\n                }}\n                type=\"file\"\n                onChange={(e) => onChangeModel(e)}\n              />\n            </Button>\n          </div>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-helper-label\">\n              LinkType\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-helper-label\"\n              id=\"demo-simple-select-helper\"\n              value={link}\n              onChange={onSelectedLinkTypeChanged}\n            >\n              <MenuItem value=\"3\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value={2}>Cascading</MenuItem>\n              <MenuItem value={0}>Bezir</MenuItem>\n              <MenuItem value={3}>Spline</MenuItem>\n              <MenuItem value={1}>Polyline</MenuItem>\n            </Select>\n            <FormHelperText>Please choose your link type</FormHelperText>\n          </FormControl>\n          <Button onClick={onZoomInClicked} color=\"inherit\">\n            <FontAwesomeIcon icon=\"search-plus\" />\n          </Button>\n          <Button onClick={onZoomOutClicked} color=\"inherit\">\n            <FontAwesomeIcon icon=\"search-minus\" />\n          </Button>\n          <Button onClick={onLockClicked} color=\"inherit\">\n            <FontAwesomeIcon icon=\"unlock\" />\n          </Button>\n          <Button onClick={onUndo} color=\"inherit\">\n            <FontAwesomeIcon icon=\"arrow-left\" />\n          </Button>\n          <Button onClick={onRedo} color=\"inherit\">\n            <FontAwesomeIcon icon=\"arrow-right\" />\n          </Button>\n          <div>\n            <Button color=\"inherit\">\n              <FontAwesomeIcon icon=\"upload\" />\n              <input\n                style={{\n                  position: \"relative\",\n                  right: \"20px\",\n                  opacity: \"0\",\n                  width: \"50px\"\n                }}\n                type=\"file\"\n                onChange={(e) => onChangeMatrix(e)}\n              />\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faExpandAlt,\n  faCaretDown,\n  faProjectDiagram,\n  faArrowLeft,\n  faSearchPlus,\n  faLongArrowAltLeft,\n  faLongArrowAltRight,\n  faUnlock,\n  faSearchMinus,\n  faUser,\n  faEnvelope,\n  faLock,\n  faEye,\n  faEyeSlash,\n  faArrowUp,\n  faArrowDown,\n  faExpand,\n  faCompress,\n  faBolt,\n  faSpinner,\n  faSort,\n  faSortUp,\n  faSortDown,\n  faMoon,\n  faChevronRight,\n  faGlobe,\n  faUpload,\n  faCaretRight,\n  faArrowRight\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n  faExpandAlt,\n  faCaretDown,\n  faArrowLeft,\n  faArrowRight,\n  faLongArrowAltLeft,\n  faLongArrowAltRight,\n  faProjectDiagram,\n  faUnlock,\n  faSearchPlus,\n  faSearchMinus,\n  faUser,\n  faUpload,\n  faEnvelope,\n  faLock,\n  faEye,\n  faEyeSlash,\n  faArrowUp,\n  faArrowDown,\n  faExpand,\n  faCompress,\n  faBolt,\n  faSpinner,\n  faSort,\n  faSortUp,\n  faSortDown,\n  faMoon,\n  faChevronRight,\n  faGlobe,\n  faCaretRight\n);\n","import React, { Component } from \"react\";\nimport mf from \"diagram-library\";\nimport cm from \"mindfusion-common\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { DiagramView, NodeListView } from \"diagram-library-react\";\nimport MyAnimation from \"./MyAnimation\";\nimport Matrix from \"./Matrix\";\nimport Tree from \"./Tree\";\nimport Tabs from \"./Tabs\";\nimport ToolBar from \"./ToolBar\";\nimport \"./components/FontawsomeIcons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./styles.css\";\nimport \"./App.css\";\n\nclass DiagramApp extends Component {\n  constructor(props) {\n    super(props);\n\n    var diagram = new mf.Diagramming.Diagram();\n    diagram.setShowGrid(true);\n    diagram.setDefaultShape(\"Container\");\n    diagram.setLinkShape(mf.Diagramming.LinkShape.Spline);\n\n    diagram.setTheme(mf.Diagramming.Theme.getBusiness());\n\n    var props = {\n      id: \"diagram1\",\n      backBrush: \"#0a0a0a\",\n      behavior: mf.Diagramming.Behavior.LinkContainers\n    };\n\n    var AeroEffect = mf.Diagramming.AeroEffect;\n    var GlassEffect = mf.Diagramming.GlassEffect;\n    var GlassEffectType = mf.Diagramming.GlassEffectType;\n\n    var glassEffect = new GlassEffect();\n    glassEffect.setType(GlassEffectType.Type2);\n\n    diagram.getNodeEffects().push(glassEffect);\n    diagram.getNodeEffects().push(new AeroEffect());\n    var firstNode = diagram.getNodes()[0];\n    var nodes = [];\n    nodes.push(firstNode);\n\n    var counter = 1;\n\n    var shapeNodes = [];\n    var arrowInOuts = [];\n\n    var shapeIds = [\"Actor\", \"Plaque\", \"Database\", \"File\"];\n    var shapeName = [\"Function\", \"Actor\", \"Plaque\", \"Database\", \"File\"];\n    var arrowHeadIds = [\"Quill\", \"PointerArrow\", \"Pentagon\"];\n    var arrowHeadNames = [\"Informations\", \"Energie\", \"Material\"];\n    var arrowInOutIds = [\"Arrow3\", \"Arrow3\", \"Arrow5\"];\n    var arrowInOutName = [\"InPut\", \"OutPut\", \"InPut/OutPut\"];\n    var arrowHeadNodes = [];\n\n    //add container\n    var node = new mf.Diagramming.ContainerNode();\n    shapeNodes.push(node);\n\n    for (var i = 0; i < shapeIds.length; i++) {\n      node = new mf.Diagramming.ShapeNode(diagram);\n      node.setShape(shapeIds[i]);\n      shapeNodes.push(node);\n    }\n\n    for (var arrowHeadId of arrowHeadIds) {\n      var arrowHead = new mf.Diagramming.ShapeNode(diagram);\n      arrowHead.setShape(arrowHeadId);\n      arrowHeadNodes.push(arrowHead);\n    }\n\n    var arrowInOut1 = new mf.Diagramming.ShapeNode(diagram);\n    arrowInOut1.setId(\"inPut\");\n    arrowInOut1.setShape(\"Arrow3\");\n    arrowInOuts.push(arrowInOut1);\n\n    var arrowInOut2 = new mf.Diagramming.ShapeNode(diagram);\n    arrowInOut2.setId(\"outPut\");\n    arrowInOut2.setShape(\"Arrow3\");\n    arrowInOuts.push(arrowInOut2);\n\n    var arrowInOut3 = new mf.Diagramming.ShapeNode(diagram);\n    arrowInOut3.setId(\"all\");\n    arrowInOut3.setShape(\"Arrow5\");\n    arrowInOuts.push(arrowInOut3);\n\n    //enable setting text field\n    diagram.setAllowInplaceEdit(true);\n\n    diagram.setUndoEnabled(true);\n\n    diagram.addEventListener(\"nodeCreated\", this.onAddContainer.bind(this));\n\n    diagram.addEventListener(\n      \"containerChildAdded\",\n      this.onContainerChildAdded.bind(this)\n    );\n    diagram.addEventListener(\n      \"nodeTextEdited\",\n      this.onNodeTextEdited.bind(this)\n    );\n    diagram.addEventListener(\"nodeDeleted\", this.onNodeDeleted.bind(this));\n    this.state = {\n      props: props,\n      matrix: [],\n      diagram: diagram,\n      nextId: 1,\n      containers: [],\n      treeData: [],\n      nodes: shapeNodes,\n      captions: shapeName,\n\n      arrowInOuts: arrowInOuts,\n      arrowInOutName: arrowInOutName,\n      arrowHeadShapes: arrowHeadNodes,\n      arrowHeadIds: arrowHeadIds,\n      arrowHeadNames: arrowHeadNames,\n      behavior: mf.Diagramming.Behavior.LinkContainers\n    };\n  }\n\n  onAddContainer(e, args) {\n    console.log(\"ok\");\n    var node = args.getNode();\n    node.setId(this.state.nextId.toString());\n    this.setState({ treeData: this.getDiagramJson() });\n    var matrix = this.state.matrix;\n    var arr = [];\n    var nbligne = matrix.length;\n    arr[0] = (\n      <button\n        style={{ width: \"20px\", opacity: 0, height: \"20px\" }}\n        type=\"button\"\n      >\n        {node.getId()}\n      </button>\n    );\n    if (matrix[0]) {\n      for (var j = 1; j < matrix[0].length; j++) {\n        arr[j] = (\n          <button\n            style={{ width: \"20px\", height: \"20px\" }}\n            id={nbligne + \",\" + j}\n            type=\"button\"\n            onClick={this.fct}\n          ></button>\n        );\n      }\n    }\n    matrix.push(arr);\n    this.setState({ nextId: this.state.nextId + 1 });\n  }\n  getAllChildren = (children) => {\n    if (children.length === 0) {\n      return [];\n    }\n\n    var obj2 = [\n      {\n        id: children[0].id,\n        name: children[0].text.text,\n        children: children[0].children.map((child) =>\n          this.getAllChildren(child)\n        )\n      }\n    ];\n    return obj2;\n  };\n  findRec = (treeData, id) => {\n    if (treeData.length > 0 && treeData[0].id === id) {\n      return treeData[0];\n    } else if (treeData.length > 0) {\n      var node = this.findRec(treeData[0].children, id);\n      if (node) {\n        return node;\n      } else {\n        return this.findRec(treeData.slice(1), id);\n      }\n    }\n  };\n\n  filterRec = (treeData, id) => {\n    var filtredTree1 = treeData.filter((node) => node.id != id);\n    return filtredTree1.map((node) => {\n      var obj = {\n        id: node.id,\n        name: node.name,\n        children: this.filterRec(node.children, id)\n      };\n      return obj;\n    });\n  };\n  onContainerChildAdded(e, args) {\n    this.setState({ treeData: this.getDiagramJson() });\n  }\n\n  onNodeDeleted(e, args) {\n    var listChilds = args.getNode().getChildren();\n    listChilds.forEach((node) => this.state.diagram.removeItem(node));\n    this.setState({ treeData: this.getDiagramJson() });\n  }\n  onNodeTextEdited(e, args) {\n    var node = args.getNode();\n    var id = node.getId();\n    var matrix = this.state.matrix;\n    this.setState({ treeData: this.getDiagramJson() });\n    for (var i = 0; i < matrix.length; i++) {\n      if (matrix[i][0].props && matrix[i][0].props.children === id) {\n        matrix[i][0] = node.getText();\n      }\n    }\n  }\n  onSelectedLinkChanged(sender, args) {\n    var selectedShape = args.getNode().getShape();\n    this.state.diagram.setLinkHeadShape(selectedShape);\n  }\n\n  arrangeDiagram(diagram) {\n    var layout = new mf.Graphs.SpringLayout();\n    //layout.direction = mf.Graphs.LayoutDirection.LeftToRight;\n    // diagram.arrange(layout);\n    layout.iteration = 100;\n    this.state.diagram.arrange(layout);\n    this.state.diagram.resizeToFitItems();\n  }\n\n  onSelectChange(event) {\n    this.setState({ behavior: +event.target.value });\n  }\n\n  onSelectedLinkTypeChanged(event) {\n    this.state.diagram.setLinkShape(event.target.val);\n\n    if (event.target.value === 2) this.state.diagram.setRouteLinks(true);\n    else this.state.diagram.setRouteLinks(false);\n  }\n  exist = (x, y, points) => {\n    if (points.length === 0) return false;\n    if (x === points[0].x && y === points[0].y) return true;\n    return this.exist(x, y, points.slice(1));\n  };\n  goodForma = (x, y) => {\n    return (\n      (x !== 0 && y === 0 && x < 100) ||\n      (x === 0 && y !== 0 && y < 100) ||\n      (x !== 0 && y === 100 && x < 100) ||\n      (x === 100 && y !== 0 && y < 100)\n    );\n  };\n  onSelectedPortAdded(sender, args) {\n    var selectedItems = this.state.diagram.getSelection().nodes;\n\n    if (selectedItems && selectedItems.length > 0) {\n      var selectedNode = selectedItems[0];\n      const set = [0, 10, 20, 30, 40, 50, 60, 70, 80, 100];\n      var x = 10;\n      var y = 0;\n      var pattern = selectedNode.getAnchorPattern();\n      while (\n        !this.goodForma(x, y) ||\n        (pattern && this.exist(x, y, pattern.points))\n      ) {\n        x = set[Math.floor(Math.random() * set.length)];\n        y = set[Math.floor(Math.random() * set.length)];\n      }\n      var p = new mf.Diagramming.AnchorPoint(x, y, false, false);\n      p.setMarkStyle(mf.Diagramming.MarkStyle.Rectangle);\n      p.setColor(\"rgb(128, 255, 255)\");\n      p.setSize(5);\n      if (args.getNode().getId() == \"inPut\") {\n        p.setAllowIncoming(true);\n      } else if (args.getNode().getId() == \"outPut\") {\n        p.setAllowOutgoing(true);\n      } else {\n        p.setAllowIncoming(true);\n        p.setAllowOutgoing(true);\n      }\n      if (pattern) {\n        var points = pattern.getPoints();\n        points.push(p);\n        pattern.setPoints(points);\n\n        selectedNode.setAnchorPattern(pattern);\n      } else {\n        pattern = new mf.Diagramming.AnchorPattern([p]);\n        selectedNode.setAnchorPattern(pattern);\n      }\n      console.log(pattern);\n    }\n  }\n\n  addTocontainer = (fct, container) => {\n    container.add(fct);\n    container.resizeToFitChildren(true, 2);\n    container.arrange(new mf.Graphs.LayeredLayout());\n  };\n\n  drawFct = (fct, diagram) => {\n    var container = diagram\n      .getFactory()\n      .createContainerNode(new cm.Drawing.Rect(10, 20, 50, 25));\n    container.setText(fct.name);\n    container.setId(this.state.nextId);\n    var ports = fct.ports;\n    var listPorts = [];\n    for (var i = 0; i < ports.length; i++) {\n      var p = null;\n      if (ports[i].type == \"in\") {\n        if (i < 9) {\n          p = new mf.Diagramming.AnchorPoint(10 * (i + 1), 0, true, false);\n        } else if (i < 18) {\n          p = new mf.Diagramming.AnchorPoint(0, 10 * (i - 8), true, false);\n        } else if (i < 27) {\n          p = new mf.Diagramming.AnchorPoint(10 * (i - 17), 100, true, false);\n        } else if (i < 38) {\n          p = new mf.Diagramming.AnchorPoint(100, i - 26, true, false);\n        }\n      } else if (ports[i].type == \"out\") {\n        if (i < 9) {\n          p = new mf.Diagramming.AnchorPoint(10 * (i + 1), 0, false, true);\n        } else if (i < 18) {\n          p = new mf.Diagramming.AnchorPoint(10 * (i - 8), 0, false, true);\n        } else if (i < 27) {\n          p = new mf.Diagramming.AnchorPoint(10 * (i - 17), 100, false, true);\n        } else if (i < 38) {\n          p = new mf.Diagramming.AnchorPoint(100, i - 26, false, true);\n        }\n      } else {\n        if (i < 9) {\n          p = new mf.Diagramming.AnchorPoint(10 * (i + 1), 0, true, true);\n        } else if (i < 18) {\n          p = new mf.Diagramming.AnchorPoint(10 * (i - 8), 0, true, true);\n        } else if (i < 27) {\n          p = new mf.Diagramming.AnchorPoint(10 * (i - 17), 100, true, true);\n        } else if (i < 38) {\n          p = new mf.Diagramming.AnchorPoint(100, i - 26, true, true);\n        }\n      }\n\n      p.setMarkStyle(mf.Diagramming.MarkStyle.Rectangle);\n      p.setColor(\"rgb(128, 255, 255)\");\n      listPorts.push(p);\n    }\n    var pattern = new mf.Diagramming.AnchorPattern(listPorts);\n    container.setAnchorPattern(pattern);\n\n    var obj = {\n      name: fct.name,\n      id: this.state.nextId,\n      container: container\n    };\n    this.state.containers.push(obj);\n    this.setState({ nextId: this.state.nextId + 1 });\n    if (fct.children) this.drawTree(fct.children, container);\n\n    return obj;\n  };\n\n  drawTree = (functions, container) => {\n    if (container) {\n      return functions.map((fct) =>\n        this.addTocontainer(\n          this.drawFct(fct, this.state.diagram).container,\n          container\n        )\n      );\n    }\n    functions.map((fct) => this.drawFct(fct, this.state.diagram));\n  };\n\n  onZoomOutClicked(e) {\n    var zoom = this.state.diagram.getZoomFactor();\n    zoom -= 10;\n    if (zoom > 10) this.state.diagram.setZoomFactor(zoom);\n  }\n\n  onZoomInClicked(e) {\n    var zoom = this.state.diagram.getZoomFactor();\n\n    zoom += 10;\n    if (zoom < 500) this.state.diagram.setZoomFactor(zoom);\n  }\n  fct = () => {\n    /*  // var ij = event.srcElement.id;\n    var arr_i_j = ij.split(\",\");\n    var matrix = this.state.matrix;\n    matrix[arr_i_j[0]][arr_i_j[1]] = <FontAwesomeIcon icon=\"expand-alt\" />;\n    this.setState({ matrix: matrix }); */\n  };\n  getMaxId(data) {\n    if (data.length === 0) {\n      return 0;\n    } else {\n      var ids = data.map((node) => node.id);\n      var othersIds = data.map((node) => this.getMaxId(node.children));\n      var allIds = ids.concat(othersIds);\n      return Math.max(...allIds);\n    }\n  }\n  findInChild = (arr, id) => {\n    if (arr.length === 0) {\n      return false;\n    }\n    if (this.findRec(arr[0].children, id)) return true;\n    return this.findInChild(arr.slice(1), id);\n  };\n  filterJson = (fcts) => {\n    var fctsFiltred = fcts;\n    for (var i = 0; i < fcts.length; i++) {\n      if (this.findInChild(fctsFiltred, fcts[i].id)) {\n        fctsFiltred = fctsFiltred.filter((f) => f.id != fcts[i].id);\n      }\n    }\n    fctsFiltred = fctsFiltred.filter((f) => f.id);\n    return fctsFiltred;\n  };\n\n  getAllFunNames = (data) => {\n    var globalFunNames = data.map((f) => f.name);\n    var localFunNames = data.map((f) => this.getAllFunNames(f.children));\n    var localFunNamesFlat = localFunNames.flat();\n    return localFunNamesFlat.concat(globalFunNames);\n  };\n  getDiagramJson = () => {\n    var allItems = this.state.diagram.items;\n    var fcts = [];\n    for (var i = 0; i < allItems.length; i++) {\n      fcts.push(this.getFctJson(allItems[i]));\n    }\n\n    return this.filterJson(fcts);\n  };\n  getFctJson = (fct) => {\n    var obj = {};\n    if (!fct.children || fct.children.length == 0) {\n      obj = {\n        id: fct.id,\n        name: fct.text.text,\n        children: []\n      };\n      return obj;\n    }\n    obj = {\n      id: fct.id,\n      name: fct.text.text,\n      children: fct.children.map((f) => this.getFctJson(f))\n    };\n    return obj;\n  };\n\n  render() {\n    return (\n      <div class=\"container-fluid\">\n        <div class=\"row\">\n          <ToolBar diagram={this} />\n        </div>\n        <div class=\"row  mt-1  \" style={{ height: \"500px\" }}>\n          <div class=\"col-sm-2 bg-secondary border border-dark rounded \">\n            <label\n              class=\"text-center p-1 mb-2\"\n              style={{\n                width: \"100%\"\n              }}\n              for=\"Nodes\"\n            >\n              <FontAwesomeIcon icon=\"caret-down\" /> TreeView\n            </label>\n            <div class=\"border border-dark rounded\" style={{ height: \"300px\" }}>\n              <Tree data={this.state.treeData} />\n            </div>\n          </div>\n\n          <div class=\" col-sm-10 bg-secondary rounded border border-dark  \">\n            <Tabs\n              matrix={this.state.matrix}\n              diagram={this}\n              props={this.state.props}\n              nodeView={{\n                nodes: this.state.nodes,\n                captions: this.state.captions,\n                arrowHeadShapes: this.state.arrowHeadShapes,\n                arrowHeadNames: this.state.arrowHeadNames\n              }}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-2 bg-light \"></div>\n          <div class=\" col-sm-9 bg-light\"></div>\n          <div class=\"col-sm-1 bg-light \" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DiagramApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport DiagramApp from \"./DiagramApp\";\nimport TreeList from \"./App\";\nimport ToolBar from \"./ToolBar\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <DiagramApp />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}